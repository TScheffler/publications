#!/usr/bin/env ruby
# -*- coding: utf-8; -*-

##################################################################
require 'optparse'
require 'nokogiri'
require 'pp'

##################################################################
# Variables and Constants
Encoding.default_internal = 'utf-8'
Encoding.default_external = 'utf-8'

STAT_CONTAINER = { \
  'false_pos' => 0, \
  'false_neg' => 0, \
  'true_pos' => 0, \
  'true_neg' => 0}

@elements = { \
  'attoken' => STAT_CONTAINER.dup(), \
  'link'   => STAT_CONTAINER.dup(), \
  'smiley' => STAT_CONTAINER.dup()}

##################################################################
# Methods

##################################################################
# Arguments
OptionParser.new(nil, 20) do |opt_parser|
  myname = File.basename(opt_parser.program_name)
  opt_parser.banner = <<-EOF
#{myname} checks if lines having similar keys (i.e. 2-nd fields) in 2
input files have similar assigned classes.

USAGE:
#{myname} FILE1 FILE2
  EOF
end.parse!()

##################################################################
# Main
f     = nil
fname = nil
doc   = nil

ARGV.each do |fname|
  f = File.open(fname)
  doc = Nokogiri::XML(f)
  @elements.each_pair do |elname, elstat|
    doc.xpath("//#{elname}").each do |el|
      raise "Class not specified for element at line: #{el.line()}" unless el['class']
      elstat[el['class']] += 1
    end
  end
  f.close()
end

p @elements

=begin
{"attoken"=>{"false_pos"=>6, "false_neg"=>6, "true_pos"=>524,
"true_neg"=>0}, "link"=>{"false_pos"=>2, "false_neg"=>0,
"true_pos"=>354, "true_neg"=>0}, "smiley"=>{"false_pos"=>10,
"false_neg"=>47, "true_pos"=>151, "true_neg"=>0}}
=end
